{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/addperson/addperson.component.css","webpack:///./src/app/components/addperson/addperson.component.html","webpack:///./src/app/components/addperson/addperson.component.ts","webpack:///./src/app/components/personslist/personslist.component.html","webpack:///./src/app/components/personslist/personslist.component.ts","webpack:///./src/app/services/student.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!-- <div class=\\\"container\\\"> -->\\n  <nav class=\\\"navbar navbar-default\\\">\\n    <!-- <div class=\\\"container-fluid\\\"> -->\\n        <div class=\\\"navbar-header\\\">\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['persons']\\\">Persons Info</a>\\n        </div>\\n        <ul class=\\\"nav navbar-nav\\\">\\n            <li [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['persons']\\\">PersonsList</a></li>\\n            <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a [routerLink]=\\\"['person']\\\">Add Person</a></li>\\n        </ul>\\n    <!-- </div> -->\\n  </nav>\\n  <div class=\\\"container\\\">\\n    <toaster-container [toasterconfig]=\\\"config1\\\"></toaster-container>\\n    <router-outlet></router-outlet>    \\n  </div>\\n<!-- </div> -->\\n\\n\"","import { Component } from '@angular/core';\nimport { ToasterService, ToasterConfig } from 'angular2-toaster';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public config1 : ToasterConfig = new ToasterConfig({\n    positionClass: 'toast-top-right',\n    animation: 'fade',\n    timeout: 2000,\n    limit: 3,\n    tapToDismiss: true,\n    showCloseButton: { 'warning': true, 'error': false }\n  });\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ToasterContainerComponent, ToasterModule, ToasterService, ToasterConfig } from 'angular2-toaster';\n\n\nimport { appRoutes } from './app.routes';\n\nimport { StudentService } from './services/student.service';\n\nimport { AppComponent } from './app.component';\nimport { AddpersonComponent } from './components/addperson/addperson.component';\nimport { PersonsListComponent } from './components/personslist/personslist.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddpersonComponent,\n    PersonsListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(appRoutes),\n    ToasterModule.forRoot()\n  ],\n  providers: [\n    StudentService,\n    ToasterService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\nimport { AddpersonComponent } from './components/addperson/addperson.component';\nimport { PersonsListComponent } from './components/personslist/personslist.component';\n\nexport const appRoutes: Routes  = [\n    {path: '', redirectTo: 'persons', pathMatch:'full'},\n    {path: 'persons', component: PersonsListComponent},\n    { path: 'person', component: AddpersonComponent}\n]","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRkcGVyc29uL2FkZHBlcnNvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"addPerson()\\\">\\n    <h2 class=\\\"text-info\\\">\\n      <span *ngIf=\\\"!personId\\\">Add Person</span>\\n      <span *ngIf=\\\"personId\\\">Update Person Info\\n        <a href=\\\"persons\\\" class=\\\"pull-right\\\">Back</a>\\n      </span>\\n    </h2>\\n    <hr/>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Name:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" formControlName=\\\"name\\\" id=\\\"name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"radio-inline\\\">\\n        <label><input type=\\\"radio\\\" formControlName=\\\"gender\\\" value=\\\"male\\\" name=\\\"gender\\\">Male</label>\\n      </div>\\n      <div class=\\\"radio-inline\\\">\\n        <label><input type=\\\"radio\\\" formControlName=\\\"gender\\\" value=\\\"female\\\" name=\\\"gender\\\">Female</label>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"age\\\">Age:</label>\\n      <input type=\\\"number\\\" formControlName=\\\"age\\\" name=\\\"age\\\" class=\\\"form-control\\\" id=\\\"age\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"mobileNumber\\\">Mobile Number:</label>\\n      <input type=\\\"text\\\" formControlName=\\\"mobileNumber\\\" name=\\\"mobileNumber\\\" class=\\\"form-control\\\" id=\\\"mobileNumber\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-md btn-primary\\\">\\n      <span *ngIf=\\\"!personId\\\">Add Person</span>\\n      <span *ngIf=\\\"personId\\\">Update Person Info</span>      \\n    </button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../../services/student.service';\nimport { Form, FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToasterService, Toast } from 'angular2-toaster';\n\n@Component({\n  selector: 'app-addperson',\n  templateUrl: './addperson.component.html',\n  styleUrls: ['./addperson.component.css']\n})\nexport class AddpersonComponent implements OnInit {\n  form: FormGroup;\n  personId: String;\n  person: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private studentSrv: StudentService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrSrv: ToasterService\n  ) { }\n\n  ngOnInit() {\n    this.personId = this.route.snapshot.queryParams['id'];\n    this.initData();\n  }\n  \n  initData(){\n    console.log(this.personId);\n    this.form = this.formBuilder.group({\n      name: '',\n      age: '',\n      gender: '',\n      mobileNumber: ''\n    });\n    if(this.personId){\n      this.getPersonDetails();\n    }\n  }\n\n  getPersonDetails(){\n    this.studentSrv.getPersonDetails(this.personId).subscribe((res)=>{\n      if(res.success){\n        this.form = this.formBuilder.group({\n          name: res.data.name,\n          age: res.data.age,\n          gender: res.data.gender,\n          mobileNumber: res.data.mobileNumber\n        });\n      }else{\n        this.showToastMsg(\"warning\",res.msg,null);                  \n      }\n    },(err)=>{\n      this.showToastMsg(\"warning\",err.msg,null);                \n    })\n  }\n\n  showToastMsg(type, title, body){\n    let toast: Toast = {\n      type: type,\n      title: title,\n      body: body,\n      showCloseButton: true\n    };\n    this.toastrSrv.pop(toast);\n  }\n  \n\n  addPerson(){\n    if(this.personId){\n      this.studentSrv.updatePerson(this.personId, this.form.value).subscribe((res) => {\n        if(res.success){\n          this.showToastMsg(\"success\",res.msg,null);          \n          this.router.navigate(['/persons']);\n        }else{\n          this.showToastMsg(\"warning\",res.msg,null);\n        }\n      },(err) => {\n        this.showToastMsg(\"warning\",err.msg,null);        \n      })\n    }else{\n      this.studentSrv.addPerson(this.form.value).subscribe((res) => {\n        if(res.success){\n          this.showToastMsg(\"success\",res.msg,null);                    \n          this.router.navigate(['/persons']);\n        }else{\n          this.showToastMsg(\"warning\",res.msg,null);          \n        }\n      },(err) => {\n        this.showToastMsg(\"warning\",err.msg,null);        \n      })\n    }\n  }\n\n}\n","module.exports = \"<div class=\\\"card\\\">\\n    <h4 class=\\\"text-danger\\\" *ngIf=\\\"showMsg\\\">{{ msg }}</h4>\\n    <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>Name</th>\\n            <th>Gender</th>\\n            <th>Age</th>\\n            <th>Mobile Number</th>\\n            <th>Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"noData\\\">\\n          <tr colspan=\\\"4\\\" >\\n            <h4 class=\\\"text-center\\\">No Persons In Db.</h4>\\n          </tr>\\n        </tbody>\\n        <tbody *ngIf=\\\"!noData\\\">\\n            <tr *ngFor=\\\"let person of persons\\\">\\n                <td>{{ person.name }}</td>\\n                <td>{{ person.gender }}</td>\\n                <td>{{ person.age }}</td>\\n                <td>{{ person.mobileNumber }}</td>\\n                <td>\\n                    <button class=\\\"btn btn-md btn-info\\\" (click)=\\\"editPerson(person)\\\">Edit</button>&nbsp;&nbsp;\\n                    <button class=\\\"btn btn-md btn-danger\\\" (click)=\\\"deletePerson(person)\\\">Delete</button>\\n                </td>\\n            </tr>\\n        </tbody>\\n      </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { StudentService } from '../../services/student.service';\nimport { ToasterService, Toast } from 'angular2-toaster';\n\n@Component({\n  selector: 'app-persons',\n  templateUrl: './personslist.component.html',\n  styleUrls: ['../addperson/addperson.component.css']\n})\nexport class PersonsListComponent implements OnInit {\n\n  persons: any[];\n  noData: Boolean = true;\n  showMsg: Boolean = false;\n  msg: String;\n\n  constructor(\n      private router: Router,\n      private route: ActivatedRoute,\n      private studentSrv: StudentService,\n      private toastrSrv: ToasterService      \n  ) { }\n\n  ngOnInit() {\n      this.getPersonsList();\n  } \n\n  getPersonsList(){  \n      this.studentSrv.getPersons().subscribe((res) => {\n        if(res.success){\n          this.persons = res.data;\n          this.noData = res.data.length > 0 ? false : true;\n        }else{\n          this.noData = true;\n          this.persons = [];\n        }\n      },(err) => {\n        this.showToastMsg(\"warning\",err.msg,null);\n      });\n  }\n\n  editPerson(person){\n    this.router.navigate(['person'],{queryParams: {id: person['_id']}});\n  }\n\n  showToastMsg(type, title, body){\n    let toast: Toast = {\n      type: type,\n      title: title,\n      body: body,\n      showCloseButton: true\n    };\n    this.toastrSrv.pop(toast);\n  }\n\n  deletePerson(person){\n    this.showMsg = true;\n    this.studentSrv.deletePerson(person['_id']).subscribe((res)=>{\n      let css = res.success ? \"success\" : \"warning\";\n      this.showToastMsg(css,res.msg,null);          \n      this.getPersonsList();\n    },(err)=>{\n      this.showToastMsg(\"warning\",err.msg,null);\n    })\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StudentService{\n\n    url = \"http://localhost:3000/api/\";\n\n    constructor(\n        private http: Http\n    ){}\n\n    getHeaders(){\n        let headers = new Headers;\n        headers.append('Content-Type','application/json');\n        return headers;\n    }\n\n    getPersons(): Observable<any>{\n       return this.http.get(this.url+\"person\",{headers: this.getHeaders()}).pipe((map((res) => res.json())));\n    }\n\n    addPerson(postData): Observable<any>{\n        console.log(postData);\n        \n       return this.http.post(this.url+\"person\", postData, {headers: this.getHeaders()}).pipe((map((res) => res.json())));        \n    }\n\n    updatePerson(personId, updatedInfo): Observable<any>{\n       return this.http.put(this.url+\"person/\"+personId, updatedInfo, {headers: this.getHeaders()}).pipe((map((res) => res.json())));                \n    }\n\n    deletePerson(personId): Observable<any>{\n        return this.http.delete(this.url+\"person/\"+personId, {headers: this.getHeaders()}).pipe((map((res) => res.json())));                        \n    }\n\n    getPersonDetails(personId): Observable<any>{\n        return this.http.get(this.url+\"person/\"+personId, {headers: this.getHeaders()}).pipe((map((res) => res.json())));                                \n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}